[tool.poetry]
name = "ai-backend"
version = "0.1.0"
description = ""
authors = ["Karrenbelt <m.a.p.karrenbelt@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.5"

[tool.poetry.group.frontend.dependencies]
gradio = "^4.24.0"
requests = "^2.31.0"
pillow = "^10.3.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.stable-diff.dependencies]
fastapi = "^0.110.0"
uvicorn = "^0.29.0"
diffusers = "^0.27.2"
transformers = "^4.39.2"
accelerate = "^0.28.0"
mediapy = "^1.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
indent-width = 4
fix = true
preview = false
show-fixes = false
respect-gitignore = true
exclude = []
output-format = "grouped"
target-version = "py310"
required-version = ">=0.3.2"

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 99
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
fixable = ["ALL"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.isort]
length-sort = true
order-by-type = true
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 5
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-nested-blocks = 3
max-positional-args = 3
max-public-methods = 20
max-returns = 6
max-statements = 50
